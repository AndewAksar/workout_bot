# bot/handlers/commands.py
import sqlite3
from telegram import Update
from telegram.ext import ContextTypes

from bot.config.settings import TELEGRAM_TOKEN, WELCOME_MESSAGE
from bot.keyboards.main_menu import get_main_menu
from bot.keyboards.settings_menu import get_settings_menu, get_personal_data_menu, get_training_settings_menu


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.message.from_user
    user_id = user.id
    username = user.username if user.username else "–¥—Ä—É–≥"
    first_name = user.first_name if user.first_name else ""

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ
    conn = sqlite3.connect('users.db')
    c = conn.cursor()
    c.execute("INSERT OR REPLACE INTO UserSettings (user_id, username, name) VALUES (?, ?, ?)",
              (user_id, username, first_name))
    conn.commit()

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è
    c.execute("SELECT name, age, weight, height, training_type FROM UserSettings WHERE user_id = ?",
              (user_id,))
    profile = c.fetchone()
    conn.close()

    greeting = (
        f"<b>–ü—Ä–∏–≤–µ—Ç, {profile[0] or username}! üëã</b>\n"
        f"–¢–≤–æ–π ID: <code>{user_id}</code>\n"
    )
    if profile and any(profile[1:]):  # –ï—Å–ª–∏ –µ—Å—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        greeting += (
            f"\nüìã <b>–¢–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å:</b>\n"
            f"–í–æ–∑—Ä–∞—Å—Ç: {profile[1] if profile[1] else '–ù–µ —É–∫–∞–∑–∞–Ω'}\n"
            f"–í–µ—Å: {profile[2] if profile[2] else '–ù–µ —É–∫–∞–∑–∞–Ω'} –∫–≥\n"
            f"–†–æ—Å—Ç: {profile[3] if profile[3] else '–ù–µ —É–∫–∞–∑–∞–Ω'} —Å–º\n"
            f"–¢–∏–ø —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫: {profile[4] if profile[4] else '–ù–µ —É–∫–∞–∑–∞–Ω'}\n"
        )
    greeting += f"{WELCOME_MESSAGE}"

    await update.message.reply_text(
        greeting,
        parse_mode="HTML",  # –í–∫–ª—é—á–∞–µ–º HTML-—Ä–∞–∑–º–µ—Ç–∫—É
        reply_markup=get_main_menu()
    )

async def help(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:\n"
        "/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n"
        "/settings - –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å\n\n"
        "/contacts - –ö–æ–Ω—Ç–∞–∫—Ç—ã —Å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º\n\n"
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /contact
async def contact(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        f"üìû <b>–ö–æ–Ω—Ç–∞–∫—Ç—ã –≤–ª–∞–¥–µ–ª—å—Ü–∞:</b>\n"
        f"–¢–µ–ª–µ–≥—Ä–∞–º: <a href='https://t.me/dedandrew'>@dedandrew</a>\n",
        parse_mode="HTML"
    )

async def settings(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è:",
        reply_markup=get_settings_menu()
    )