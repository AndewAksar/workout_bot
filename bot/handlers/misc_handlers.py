# bot/handlers/misc_handlers.py
"""
–ú–æ–¥—É–ª—å: misc_handlers.py
–û–ø–∏—Å–∞–Ω–∏–µ: –ú–æ–¥—É–ª—å —Å–æ–¥–µ—Ä–∂–∏—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –ø—Ä–æ—á–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π Telegram-–±–æ—Ç–∞, —Ç–∞–∫–∏—Ö –∫–∞–∫ –Ω–∞—á–∞–ª–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏,
–æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –∏ –ø–µ—Ä–µ—Ö–æ–¥ –≤ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫.
–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:
- telegram: –î–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å Telegram API.
- telegram.ext: –î–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º –∏ ConversationHandler.
- bot.keyboards.main_menu: –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é.
- bot.keyboards.settings_menu: –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞—Å—Ç—Ä–æ–µ–∫.
- bot.keyboards.personal_data_menu: –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.
- bot.keyboards.training_settings_menu: –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫.
- bot.utils.logger: –î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è.
"""

import aiosqlite
from telegram import Update
from telegram.ext import ContextTypes, ConversationHandler

from bot.api.gym_stat_client import get_trainings as api_get_trainings
from bot.keyboards.main_menu import get_main_menu
from bot.keyboards.settings_menu import get_settings_menu
from bot.keyboards.personal_data_menu import get_personal_data_menu
from bot.keyboards.training_settings_menu import get_training_settings_menu
from bot.utils.api_session import get_valid_access_token
from bot.utils.db_utils import get_user_mode
from bot.utils.logger import setup_logging
from bot.config.settings import DB_PATH


logger = setup_logging()

async def start_training(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞—á–∞–ª–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏."""
    query = update.callback_query
    await query.answer()
    user_id = query.from_user.id
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –Ω–∞—á–∞–ª —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É")

    await query.message.edit_text(
        (
            "üèãÔ∏è‚Äç‚ôÇÔ∏è <b>–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –Ω–∞—á–∞—Ç–∞!</b>\n"
            "1. –ó–∞–ø–∏—à–∏ –≤ —á–∞—Ç–µ –æ—Å–Ω–æ–≤–Ω—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è, –ø–æ–¥—Ö–æ–¥—ã –∏ –≤–µ—Å–∞ ‚Äî —Ç–∞–∫ —Ç—ã"
            " –æ—Å—Ç–∞–≤–∏—à—å –∑–∞–º–µ—Ç–∫—É –¥–ª—è —Å–µ–±—è.\n"
            "2. –ü–æ—Å–ª–µ –∑–∞–Ω—è—Ç–∏—è –≤–µ—Ä–Ω–∏—Å—å –≤ –º–µ–Ω—é –∏ –≤—ã–±–µ—Ä–∏ –¥—Ä—É–≥—É—é —Ñ—É–Ω–∫—Ü–∏—é.\n"
            "3. –ï—Å–ª–∏ —Ä–∞–±–æ—Ç–∞–µ—à—å —Å Gym-Stat, –¥–æ–±–∞–≤—å –¥–µ—Ç–∞–ª–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –Ω–∞ —Å–∞–π—Ç–µ"
            " –¥–ª—è –ø–æ–ª–Ω–æ–π –∏—Å—Ç–æ—Ä–∏–∏."
        ),
        parse_mode="HTML",
        reply_markup=get_main_menu()
    )
    context.user_data['conversation_active'] = False
    return ConversationHandler.END

async def show_trainings(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    query = update.callback_query
    await query.answer()
    user_id = query.from_user.id
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∑–∞–ø—Ä–æ—Å–∏–ª —Å–ø–∏—Å–æ–∫ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫")

    mode = await get_user_mode(user_id)

    if mode == 'api':
        token = await get_valid_access_token(user_id)
        if not token:
            await query.message.edit_text(
                (
                    "üîê –ò—Å—Ç–æ—Ä–∏—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ —Ö—Ä–∞–Ω–∏—Ç—Å—è –Ω–∞ Gym-Stat.\n"
                    "–í—ã–ø–æ–ª–Ω–∏—Ç–µ /login –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ ¬´–í–æ–π—Ç–∏¬ª, —á—Ç–æ–±—ã –ø–æ–¥—Ç—è–Ω—É—Ç—å"
                    " –∑–∞–Ω—è—Ç–∏—è —Å —Å–µ—Ä–≤–µ—Ä–∞. –ü–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ –Ω–∞–∂–º–∏—Ç–µ"
                    " ¬´üóÇÔ∏è –ú–æ–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏¬ª."
                ),
                parse_mode="HTML",
                reply_markup=get_main_menu(),
            )
            context.user_data['conversation_active'] = False
            return ConversationHandler.END
        resp = await api_get_trainings(token)
        if resp.status_code == 200:
            trainings = resp.json() or []
            if trainings:
                lines = [
                    "üóÇÔ∏è <b>–í–∞—à–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ —Å Gym-Stat</b>",
                    "–ö–∞–∂–¥–∞—è —Å—Ç—Ä–æ–∫–∞ ‚Äî –¥–∞—Ç–∞ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–∞–Ω–Ω—ã—Ö —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π."
                ]
                for training in trainings:
                    lines.append(
                        f"üìÖ {training.get('date')}: {len(training.get('exercises', []))} —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π"
                    )
                lines.append(
                    "\n‚ÑπÔ∏è –†–∞—Å–∫—Ä–æ–π—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –Ω–∞ —Å–∞–π—Ç–µ Gym-Stat –∏–ª–∏ –≤–µ–¥–∏—Ç–µ"
                    " –∑–∞–º–µ—Ç–∫–∏ –ø—Ä—è–º–æ –≤ —ç—Ç–æ–º —á–∞—Ç–µ –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–π —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏."
                )
                text = "\n".join(lines)
            else:
                text = (
                    "üì≠ –ü–æ–∫–∞ –Ω–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫."
                    " –ù–∞–∂–º–∏—Ç–µ ¬´üèãÔ∏è‚Äç‚ôÇÔ∏è –ù–∞—á–∞—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É¬ª, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –∑–∞–º–µ—Ç–∫—É,"
                    " –∞ –Ω–∞ —Å–∞–π—Ç–µ Gym-Stat –¥–æ–±–∞–≤—å—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ ‚Äî –ø–æ—Å–ª–µ"
                    " —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –æ–Ω–∏ –ø–æ—è–≤—è—Ç—Å—è –∑–¥–µ—Å—å."
                )
            await query.message.edit_text(text, parse_mode="HTML", reply_markup=get_main_menu())
        else:
            await query.message.edit_text(
                (
                    "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫. –≠—Ç–æ –º–æ–∂–µ—Ç"
                    " –±—ã—Ç—å –≤—Ä–µ–º–µ–Ω–Ω–æ–π –æ—à–∏–±–∫–æ–π —Å–µ—Ä–≤–µ—Ä–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —á—É—Ç—å –ø–æ–∑–∂–µ"
                    " –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –ª–∏ –≤—ã —á–µ—Ä–µ–∑ /login."
                ),
                parse_mode="HTML",
                reply_markup=get_main_menu()
            )
    else:
        await query.message.edit_text(
            (
                "üóÇÔ∏è –í –ª–æ–∫–∞–ª—å–Ω–æ–º —Ä–µ–∂–∏–º–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –º–æ–∂–Ω–æ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏"
                " –≤—Ä—É—á–Ω—É—é. –ü–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è ¬´üèãÔ∏è‚Äç‚ôÇÔ∏è –ù–∞—á–∞—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É¬ª –æ–ø–∏—à–∏—Ç–µ"
                " —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ, –≤—Ä–µ–º—è –∏–ª–∏ –æ—â—É—â–µ–Ω–∏—è. –ö–æ–≥–¥–∞ –ø–æ—è–≤–∏—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π"
                " –∂—É—Ä–Ω–∞–ª, –≤—Å–µ –∑–∞–º–µ—Ç–∫–∏ –±—É–¥—É—Ç –ø–µ—Ä–µ–Ω–æ—Å–∏—Ç—å—Å—è —Å—é–¥–∞."
            ),
            parse_mode="HTML",
            reply_markup=get_main_menu(),
        )
    context.user_data['conversation_active'] = False
    return ConversationHandler.END

async def show_settings(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫."""
    if update is None or update.callback_query is None:
        logger.error("Update or callback_query is None in show_settings")
        return ConversationHandler.END

    query = update.callback_query
    await query.answer()
    user_id = query.from_user.id
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –æ—Ç–∫—Ä—ã–ª –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")

    try:
        async with aiosqlite.connect(DB_PATH) as db:
            async with db.execute(
                "SELECT mode FROM users WHERE user_id = ?",
                (user_id,),
            ) as cursor:
                row = await cursor.fetchone()
        mode = row[0] if row else 'local'
        mode_text = '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Gym-Stat.ru' if mode == 'api' else 'Telegram-–≤–µ—Ä—Å–∏—è'

        await query.message.edit_text(
            text=(
                "‚öôÔ∏è <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</b>\n"
                f"–¢–µ–∫—É—â–∏–π —Ä–µ–∂–∏–º: <code>{mode_text}</code>\n\n"
                "‚Ä¢ ¬´üìã –õ–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ¬ª ‚Äî –æ–±–Ω–æ–≤–∏ –∏–º—è, –≤–æ–∑—Ä–∞—Å—Ç, –≤–µ—Å, —Ä–æ—Å—Ç –∏ –ø–æ–ª.\n"
                "‚Ä¢ ¬´üë§ –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å¬ª ‚Äî –ø—Ä–æ—Å–º–æ—Ç—Ä —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö —Å–≤–µ–¥–µ–Ω–∏–π.\n"
                "‚Ä¢ ¬´‚öñÔ∏è –î–∞–Ω–Ω—ã–µ –≤–∑–≤–µ—à–∏–≤–∞–Ω–∏—è¬ª ‚Äî –∏—Å—Ç–æ—Ä–∏—è –≤–µ—Å–∞ –∏–∑ Gym-Stat.\n"
                "‚Ä¢ ¬´üîô –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é¬ª ‚Äî –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ –æ—Å–Ω–æ–≤–Ω—ã–º –¥–µ–π—Å—Ç–≤–∏—è–º.\n\n"
                "–ï—Å–ª–∏ —Ä–∞–∑–¥–µ–ª—ã –ø—É—Å—Ç—ã–µ, –Ω–∞—á–Ω–∏ —Å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ª–∏—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏"
                " –∞–≤—Ç–æ—Ä–∏–∑—É–π—Å—è —á–µ—Ä–µ–∑ /login –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å —Å–∞–π—Ç–æ–º."
            ),
            parse_mode="HTML",
            reply_markup=get_settings_menu()
        )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ show_settings –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")
        try:
            await query.message.reply_text(
                "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
                reply_markup=get_main_menu(),
            )
        except Exception as reply_error:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {reply_error}")
        return ConversationHandler.END

    context.user_data['conversation_active'] = False
    return ConversationHandler.END

async def show_personal_data_menu(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –º–µ–Ω—é –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö."""
    query = update.callback_query
    await query.answer()
    user_id = query.from_user.id
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –æ—Ç–∫—Ä—ã–ª –º–µ–Ω—é –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö")

    await query.message.edit_text(
        (
            "üìã <b>–õ–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ</b>\n"
            "1. –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ.\n"
            "2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–º (–±–æ—Ç –ø–æ–¥—Å–∫–∞–∂–µ—Ç —Ñ–æ—Ä–º–∞—Ç).\n"
            "3. –ï—Å–ª–∏ –æ—à–∏–±–ª–∏—Å—å ‚Äî –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –µ—â—ë —Ä–∞–∑ –∏–ª–∏"
            " –Ω–∞–∂–º–∏—Ç–µ /cancel, —á—Ç–æ–±—ã –≤—ã–π—Ç–∏.\n\n"
            "‚Ä¢ ¬´–ò–º—è¬ª ‚Äî –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—Å—è –≤ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è—Ö –∏ –ø—Ä–æ—Ñ–∏–ª–µ.\n"
            "‚Ä¢ ¬´–ü–æ–ª¬ª ‚Äî –Ω—É–∂–µ–Ω –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π.\n"
            "‚Ä¢ ¬´–í–æ–∑—Ä–∞—Å—Ç¬ª, ¬´–í–µ—Å¬ª, ¬´–†–æ—Å—Ç¬ª ‚Äî –ø—Ä–∏–≥–æ–¥—è—Ç—Å—è –≤ –∫–∞—Ä—Ç–æ—á–∫–µ –ø—Ä–æ—Ñ–∏–ª—è –∏"
            " –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å AI-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–æ–º.\n"
            "‚Ä¢ ¬´üîô –ù–∞–∑–∞–¥¬ª ‚Äî –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º."
        ),
        parse_mode="HTML",
        reply_markup=get_personal_data_menu()
    )
    context.user_data['conversation_active'] = False
    return ConversationHandler.END

async def show_training_settings(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫."""
    query = update.callback_query
    await query.answer()
    user_id = query.from_user.id
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –æ—Ç–∫—Ä—ã–ª –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫")

    await query.message.edit_text(
        (
            "üèãÔ∏è <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫</b>\n"
            "–ó–¥–µ—Å—å –±—É–¥—É—Ç –ø–æ—è–≤–ª—è—Ç—å—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è."
            " –ü–æ–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ –∑–∞–≥–æ—Ç–æ–≤–∫–∞ —Ä–∞–∑–¥–µ–ª–∞ ‚Äî –≤—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è"
            " –Ω–∞–∑–∞–¥ –∏–ª–∏ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –ø–æ–∂–µ–ª–∞–Ω–∏—è–º–∏ —á–µ—Ä–µ–∑ ¬´/contacts¬ª."
        ),
        parse_mode="HTML",
        reply_markup=get_training_settings_menu()
    )
    context.user_data['conversation_active'] = False
    return ConversationHandler.END

async def return_to_main_menu(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é."""
    query = update.callback_query
    await query.answer()
    user_id = query.from_user.id
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –≤–µ—Ä–Ω—É–ª—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")

    await query.message.edit_text(
        (
            "üí™ –ì–æ—Ç–æ–≤–æ! –ù–∏–∂–µ —Å–Ω–æ–≤–∞ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.\n"
            "–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –Ω–∞—á–∞—Ç—å —Å –Ω—É–ª—è ‚Äî –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start."
            " –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –∫–Ω–æ–ø–∫–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–∞–∫ –±—ã—Å—Ç—Ä—ã–µ —Å—Å—ã–ª–∫–∏:"
            " –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –Ω–∞–∂–∞—Ç—å –Ω–∞ –Ω—É–∂–Ω—É—é, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π"
            " —Ä–∞–∑–¥–µ–ª."
        ),
        parse_mode="HTML",
        reply_markup=get_main_menu()
    )
    context.user_data['conversation_active'] = False
    return ConversationHandler.END