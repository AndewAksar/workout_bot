# bot/handlers/ai_assistant_handle.py
"""
–ú–æ–¥—É–ª—å: ai_assistant.py
–û–ø–∏—Å–∞–Ω–∏–µ: –ú–æ–¥—É–ª—å —É–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—É—Å–∫–æ–º –∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ–º —Ä–∞–±–æ—Ç—ã AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ Telegram-–±–æ—Ç–∞.
–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:
- telegram: –î–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å Telegram API.
- telegram.ext: –î–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º –∏ ConversationHandler.
- bot.keyboards.ai_assistant_menu: –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞.
- bot.ai_assistant.ai_handler: –î–ª—è —Ñ—É–Ω–∫—Ü–∏–π AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞.
- bot.utils.logger: –î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è.
"""

from telegram import Update
from telegram.ext import ContextTypes, ConversationHandler

from bot.keyboards.ai_assistant_menu import get_ai_assistant_menu
from bot.ai_assistant.ai_handler import start_ai_assistant, end_ai_consultation
from bot.utils.logger import setup_logging


logger = setup_logging()

async def handle_ai_assistant(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ –∑–∞–ø—É—Å–∫ AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞.
    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        update (telegram.Update): –û–±—ä–µ–∫—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ callback-–∑–∞–ø—Ä–æ—Å–µ.
        context (telegram.ext.ContextTypes.DEFAULT_TYPE): –ö–æ–Ω—Ç–µ–∫—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã.
    –í–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:
        int: –°–æ—Å—Ç–æ—è–Ω–∏–µ ConversationHandler.
    """
    query = update.callback_query
    await query.answer()
    user_id = query.from_user.id
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∑–∞–ø—Ä–æ—Å–∏–ª AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞")

    await query.message.edit_text(
        "ü§ñ –í–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è AI-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–æ–º.",
        reply_markup=get_ai_assistant_menu()
    )
    # –ü–µ—Ä–µ–¥–∞–µ–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤ start_ai_assistant –¥–ª—è –≤—Ö–æ–¥–∞ –≤ AI_CONSULTATION
    return await start_ai_assistant(update, context)

async def start_ai(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞."""
    return await start_ai_assistant(update, context)

async def end_ai(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–ó–∞–≤–µ—Ä—à–∞–µ—Ç –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é —Å AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–º."""
    return await end_ai_consultation(update, context)