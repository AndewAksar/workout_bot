# bot/handlers/callbacks.py
"""
–ú–æ–¥—É–ª—å: callbacks.py
–û–ø–∏—Å–∞–Ω–∏–µ: –ú–æ–¥—É–ª—å —Å–æ–¥–µ—Ä–∂–∏—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ callback-–∑–∞–ø—Ä–æ—Å–æ–≤ –∏ —Å–æ—Å—Ç–æ—è–Ω–∏–π ConversationHandler
–¥–ª—è Telegram-–±–æ—Ç–∞. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö
–¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö SQLite. –¢–∞–∫–∂–µ –≤–∫–ª—é—á–∞–µ—Ç –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.

–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:
- sqlite3: –î–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö SQLite.
- telegram: –î–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å Telegram API.
- telegram.ext: –î–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º, –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞–º–∏ –∏ ConversationHandler.
- bot.keyboards.main_menu: –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä –º–µ–Ω—é.
- bot.utils.logger: –î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è.

–ê–≤—Ç–æ—Ä: Aksarin A.
–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: 19/08/2025
"""

import sqlite3
from telegram import Update
from telegram.ext import (
    ContextTypes,
    ConversationHandler
)

from bot.keyboards.main_menu import get_main_menu
from bot.keyboards.settings_menu import get_settings_menu
from bot.keyboards.personal_data_menu import get_personal_data_menu
from bot.keyboards.training_settings_menu import get_training_settings_menu
from bot.keyboards.ai_assistant_menu import get_ai_assistant_menu
from bot.utils.logger import setup_logging
from bot.config.settings import (
    DB_PATH,
    SET_NAME,
    SET_AGE,
    SET_WEIGHT,
    SET_HEIGHT,
    SET_GENDER
)
from bot.ai_assistant.ai_handler import (
    start_ai_assistant, end_ai_consultation
)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ª–æ–≥–≥–µ—Ä–∞ –¥–ª—è –∑–∞–ø–∏—Å–∏ —Å–æ–±—ã—Ç–∏–π –∏ –æ—à–∏–±–æ–∫.
logger = setup_logging()

async def button_callback(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫.
    –û–ø–∏—Å–∞–Ω–∏–µ:
        –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫–∏ –≤ –º–µ–Ω—é, –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –¥–µ–π—Å—Ç–≤–∏—è
        (–Ω–∞–ø—Ä–∏–º–µ—Ä, –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –º–µ–Ω—é, –ø—Ä–æ—Ñ–∏–ª—è –∏–ª–∏ –∑–∞–ø—É—Å–∫ –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö) –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç
        —Å–æ—Å—Ç–æ—è–Ω–∏–µ ConversationHandler –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞ –∏–ª–∏ –µ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è.
    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        update (telegram.Update): –û–±—ä–µ–∫—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ callback-–∑–∞–ø—Ä–æ—Å–µ.
        context (telegram.ext.ContextTypes.DEFAULT_TYPE): –ö–æ–Ω—Ç–µ–∫—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã.
    –í–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:
        int: –°–æ—Å—Ç–æ—è–Ω–∏–µ ConversationHandler (–Ω–∞–ø—Ä–∏–º–µ—Ä, SET_NAME, SET_AGE –∏–ª–∏ ConversationHandler.END).
    –ò—Å–∫–ª—é—á–µ–Ω–∏—è:
        - sqlite3.Error: –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–∞—é—Ç –æ—à–∏–±–∫–∏ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö.
        - telegram.error.TelegramError: –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–∞—é—Ç –æ—à–∏–±–∫–∏ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏–π.
    –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
        –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∏–º–∞–µ—Ç –∫–Ω–æ–ø–∫—É –≤ –º–µ–Ω—é, –±–æ—Ç –æ—Ç–≤–µ—á–∞–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º –∏/–∏–ª–∏ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç
        –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö.
    """

    query = update.callback_query
    await query.answer()
    user_id = query.from_user.id
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É: {query.data}")

    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    conn = sqlite3.connect(DB_PATH)
    c = conn.cursor()

    if query.data == "start_training":
        await query.message.edit_text(
            "üèãÔ∏è‚Äç‚ôÇÔ∏è –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –Ω–∞—á–∞—Ç–∞! –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ —Å–≤–æ–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è.",
            reply_markup=get_main_menu()
        )
    elif query.data == "my_trainings":
        await query.message.edit_text(
            "üóÇÔ∏è –ó–¥–µ—Å—å –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤–∞—à–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ (—Ñ—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ).",
            reply_markup=get_main_menu()
        )
    elif query.data == "my_ai_assistant":
        await query.message.edit_text(
            "ü§ñ –í–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è AI-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–æ–º.",
            reply_markup=get_ai_assistant_menu()
        )

    elif query.data == "start_ai_assistant":
        return await start_ai_assistant(update, context)

    elif query.data == "end_ai_consultation":
        return await end_ai_consultation(update, context)

    elif query.data == "settings":
        await query.message.edit_text(
            "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è:",
            reply_markup=get_settings_menu()
        )
    elif query.data == "personal_data":
        await query.message.edit_text(
            "üìã –í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å:",
            reply_markup=get_personal_data_menu()
        )
    elif query.data == "training_settings":
        await query.message.edit_text(
            "üèãÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫:",
            reply_markup=get_training_settings_menu()
        )
    elif query.data == "show_profile":
        c.execute("SELECT name, age, weight, height, gender, username "
                      "FROM UserSettings "
                      "WHERE user_id = ?",
                  (user_id,))
        profile = c.fetchone()
        if profile:
            greeting = (
                f"<b>–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:</b>\n"
                f"üë§ –ò–º—è: <code>{profile[0] if profile[0] else '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</code>\n"
                f"–í–æ–∑—Ä–∞—Å—Ç: <code>{profile[1] if profile[1] else '–ù–µ —É–∫–∞–∑–∞–Ω'}</code>\n"
                f"–í–µ—Å: <code>{profile[2] if profile[2] else '–ù–µ —É–∫–∞–∑–∞–Ω'}</code> –∫–≥\n"
                f"–†–æ—Å—Ç: <code>{profile[3] if profile[3] else '–ù–µ —É–∫–∞–∑–∞–Ω'}</code> —Å–º\n"
                f"–ü–æ–ª: <code>{profile[4] if profile[4] else '–ù–µ —É–∫–∞–∑–∞–Ω'}</code>\n\n"
                f"üìß Telegram: <code>@{profile[5] if profile[5] else '–ù–µ —É–∫–∞–∑–∞–Ω'}</code>"
            )
        else:
            greeting = "‚ö†Ô∏è –ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏."
        await query.message.edit_text(
            greeting,
            parse_mode="HTML",
            reply_markup=get_settings_menu()
        )

    elif query.data == "main_menu":
        await query.message.edit_text(
            "üí™ –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –≤ –º–µ–Ω—é –Ω–∏–∂–µ:",
            reply_markup=get_main_menu()
        )

    elif query.data == "set_name":
        await query.message.edit_text(
            "‚úçÔ∏è –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:",
            reply_markup=None
        )

        logger.info(f"–ü–µ—Ä–µ—Ö–æ–¥ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ SET_NAME –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
        return SET_NAME

    elif query.data == "set_age":
        await query.message.edit_text(
            "‚úçÔ∏è –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç (—á–∏—Å–ª–æ):",
            reply_markup=None
        )
        return SET_AGE
    elif query.data == "set_weight":
        await query.message.edit_text(
            "‚úçÔ∏èÔ∏è –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–µ—Å –≤ –∫–≥ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 70.5):",
            reply_markup=None
        )
        return SET_WEIGHT
    elif query.data == "set_height":
        await query.message.edit_text(
            "‚úçÔ∏è –í–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ä–æ—Å—Ç –≤ —Å–º (–Ω–∞–ø—Ä–∏–º–µ—Ä, 175):",
            reply_markup=None
        )

        return SET_HEIGHT
    elif query.data == "set_gender":
        await query.message.edit_text(
            "‚úçÔ∏è –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –ø–æ–ª (–º—É–∂—Å–∫–æ–π/–∂–µ–Ω—Å–∫–∏–π):",
            reply_markup=None
        )

        return SET_GENDER

    conn.close()
    return ConversationHandler.END