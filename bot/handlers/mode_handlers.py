# bot/handlers/mode_handlers.py
"""
–ú–æ–¥—É–ª—å: mode_handlers.py
–û–ø–∏—Å–∞–Ω–∏–µ: –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –≤—ã–±–æ—Ä–∞ –∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ä–µ–∂–∏–º–∞ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞.
–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:
- sqlite3 - –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö.
- httpx - –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å HTTP-–∑–∞–ø—Ä–æ—Å–∞–º–∏.
- typing - –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–∏–ø–æ–≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö.
- telegram - –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Telegram API.
- telegram.ext - –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏–π Telegram.
- bot.config.settings - –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –±–æ—Ç–∞.
- bot.keyboards.main_menu - –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é.
- bot.keyboards.mode_selection - –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –≤—ã–±–æ—Ä–∞ —Ä–µ–∂–∏–º–∞.
- bot.keyboards.settings_menu - –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞—Å—Ç—Ä–æ–µ–∫.
- bot.utils.logger - –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏–π.
"""

import sqlite3
from typing import Optional

import httpx
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes

from bot.config.settings import DB_PATH
from bot.keyboards.main_menu import get_main_menu
from bot.keyboards.mode_selection import get_mode_selection_keyboard
from bot.keyboards.settings_menu import get_settings_menu
from bot.utils.logger import setup_logging


logger = setup_logging()

def _get_user_mode(user_id: int) -> Optional[str]:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —Ä–µ–∂–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    conn = sqlite3.connect(DB_PATH)
    try:
        c = conn.cursor()
        c.execute("SELECT mode FROM users WHERE user_id = ?", (user_id,))
        row = c.fetchone()
        return row[0] if row else None
    finally:
        conn.close()

def _update_user_mode(user_id: int, mode: str) -> None:
    """–û–±–Ω–æ–≤–ª—è–µ—Ç —Ä–µ–∂–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    conn = sqlite3.connect(DB_PATH)
    try:
        c = conn.cursor()
        c.execute("UPDATE users SET mode = ? WHERE user_id = ?", (mode, user_id))
        conn.commit()
    finally:
        conn.close()

async def select_mode_local(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞."""
    query = update.callback_query
    await query.answer()
    user_id = query.from_user.id
    _update_user_mode(user_id, 'local')
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –≤—ã–±—Ä–∞–ª –ª–æ–∫–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º")
    await query.message.edit_text(
        "–í—ã –≤—ã–±—Ä–∞–ª–∏ Telegram-–≤–µ—Ä—Å–∏—é. –î–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç —Ö—Ä–∞–Ω–∏—Ç—å—Å—è –ª–æ–∫–∞–ª—å–Ω–æ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /profile –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–ª–∏ /log –¥–ª—è –∑–∞–ø–∏—Å–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫.",
        reply_markup=get_main_menu(),
    )
    await query.message.reply_text(
        "‚ÑπÔ∏è –ë–æ—Ç —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ (ID, —Ä–µ–∂–∏–º, –ø—Ä–æ—Ñ–∏–ª—å) –¥–ª—è —Ä–∞–±–æ—Ç—ã. –£–¥–∞–ª–∏—Ç—å –∏—Ö –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ /delete_data.")

async def _api_available() -> bool:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API Gym-Stat."""
    try:
        async with httpx.AsyncClient(timeout=5) as client:
            resp = await client.get("https://api.gym-stat.ru/v1/ping")
            return resp.status_code == 200
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ API: {e}")
        return False

async def select_mode_api(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ API —Ä–µ–∂–∏–º–∞."""
    query = update.callback_query
    await query.answer()
    user_id = query.from_user.id

    if await _api_available():
        _update_user_mode(user_id, 'api')
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –≤—ã–±—Ä–∞–ª API —Ä–µ–∂–∏–º")
        await query.message.edit_text(
            f"–í—ã –≤—ã–±—Ä–∞–ª–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å Gym-Stat.ru. –°–∫–æ—Ä–æ –¥–æ–±–∞–≤–∏–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é. "
            f"–î–ª—è —Ä–∞–±–æ—Ç—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /profile –∏–ª–∏ /log.",
            reply_markup=get_main_menu(),
        )
    else:
        _update_user_mode(user_id, 'local')
        logger.warning("API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ, –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –ª–æ–∫–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º")
        await query.message.edit_text(
            "‚ö†Ô∏è –°–∞–π—Ç Gym-Stat.ru –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ Telegram-–≤–µ—Ä—Å–∏—é.",
            reply_markup=get_main_menu(),
        )
    await query.message.reply_text(
        "‚ÑπÔ∏è –ë–æ—Ç —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ (ID, —Ä–µ–∂–∏–º, –ø—Ä–æ—Ñ–∏–ª—å) –¥–ª—è —Ä–∞–±–æ—Ç—ã. –£–¥–∞–ª–∏—Ç—å –∏—Ö –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ /delete_data.")

async def show_help(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help."""
    query = update.callback_query
    await query.answer()
    text = (
        "üì± Telegram-–≤–µ—Ä—Å–∏—è: –î–∞–Ω–Ω—ã–µ —Ö—Ä–∞–Ω—è—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤ –±–æ—Ç–µ. –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –ø—Ä–æ—Å—Ç–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.\n"
        "üåê –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Gym-Stat.ru: –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å —Å–∞–π—Ç–æ–º, –¥–æ—Å—Ç—É–ø –∫ –≤–µ–±-–∫–∞–±–∏–Ω–µ—Ç—É. –¢—Ä–µ–±—É–µ—Ç—Å—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è.\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /settings –¥–ª—è —Å–º–µ–Ω—ã."
    )
    await query.message.edit_text(text, reply_markup=get_mode_selection_keyboard())

async def switch_mode_prompt(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–º–µ–Ω—ã —Ä–µ–∂–∏–º–∞."""
    if update.callback_query:
        query = update.callback_query
        await query.answer()
        user_id = query.from_user.id
        message = query.message
    else:
        user_id = update.message.from_user.id
        message = update.message

    current_mode = _get_user_mode(user_id) or 'local'
    target_mode = 'api' if current_mode == 'local' else 'local'
    text_mode = '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Gym-Stat.ru' if target_mode == 'api' else 'Telegram-–≤–µ—Ä—Å–∏—è'
    keyboard = [[
        InlineKeyboardButton("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data=f"confirm_switch_{target_mode}"),
        InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_switch"),
    ]]
    markup = InlineKeyboardMarkup(keyboard)
    await message.reply_text(
        f"–í—ã —Ö–æ—Ç–∏—Ç–µ —Å–º–µ–Ω–∏—Ç—å —Ä–µ–∂–∏–º –Ω–∞ {text_mode}? –¢–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –æ—Å—Ç–∞–Ω—É—Ç—Å—è, –Ω–æ –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è.",
        reply_markup=markup,
    )

async def confirm_switch_mode(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç —Å–º–µ–Ω—É —Ä–µ–∂–∏–º–∞."""
    query = update.callback_query
    await query.answer()
    user_id = query.from_user.id
    target_mode = query.data.replace('confirm_switch_', '')

    if target_mode == 'api' and not await _api_available():
        await query.message.edit_text(
            "‚ö†Ô∏è –°–∞–π—Ç Gym-Stat.ru –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –û—Å—Ç–∞—ë–º—Å—è –≤ Telegram-–≤–µ—Ä—Å–∏–∏.",
            reply_markup=get_settings_menu(),
        )
        return

    _update_user_mode(user_id, target_mode)
    text_mode = '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Gym-Stat.ru' if target_mode == 'api' else 'Telegram-–≤–µ—Ä—Å–∏—è'
    await query.message.edit_text(
        f"–†–µ–∂–∏–º –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ {text_mode}. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /profile –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.",
        reply_markup=get_settings_menu(),
    )

async def cancel_switch(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û—Ç–º–µ–Ω—è–µ—Ç —Å–º–µ–Ω—É —Ä–µ–∂–∏–º–∞."""
    query = update.callback_query
    await query.answer()
    user_id = query.from_user.id
    current_mode = _get_user_mode(user_id) or 'local'
    text_mode = '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Gym-Stat.ru' if current_mode == 'api' else 'Telegram-–≤–µ—Ä—Å–∏—è'
    await query.message.edit_text(
        f"‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏\n–¢–µ–∫—É—â–∏–π —Ä–µ–∂–∏–º: {text_mode}\n–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.",
        reply_markup=get_settings_menu(),
    )