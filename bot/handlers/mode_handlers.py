# bot/handlers/mode_handlers.py
"""
–ú–æ–¥—É–ª—å: mode_handlers.py
–û–ø–∏—Å–∞–Ω–∏–µ: –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –≤—ã–±–æ—Ä–∞ –∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ä–µ–∂–∏–º–∞ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞.
–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:
- aiosqlite - –¥–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö.
- httpx - –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å HTTP-–∑–∞–ø—Ä–æ—Å–∞–º–∏.
- typing - –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–∏–ø–æ–≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö.
- telegram - –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Telegram API.
- telegram.ext - –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏–π Telegram.
- bot.config.settings - –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –±–æ—Ç–∞.
- bot.keyboards.main_menu - –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é.
- bot.keyboards.settings_menu - –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞—Å—Ç—Ä–æ–µ–∫.
- bot.keyboards.mode_selection - –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä –≤—ã–±–æ—Ä–∞ —Ä–µ–∂–∏–º–∞ –∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏.
- bot.utils.logger - –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏–π.
"""

import aiosqlite
from typing import Optional
import httpx
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes

from bot.config.settings import (
    DB_PATH,
    GYMSTAT_API_URL
)
from bot.keyboards.main_menu import get_main_menu
from bot.keyboards.settings_menu import get_settings_menu
from bot.keyboards.mode_selection import (
    get_mode_selection_keyboard,
    get_api_auth_keyboard,
)
from bot.utils.api_session import get_valid_access_token
from bot.utils.logger import setup_logging


logger = setup_logging()

async def _get_user_mode(user_id: int) -> Optional[str]:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —Ä–µ–∂–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    async with aiosqlite.connect(DB_PATH) as db:
        async with db.execute(
            "SELECT mode FROM users WHERE user_id = ?",
            (user_id,),
        ) as cursor:
            row = await cursor.fetchone()
    return row[0] if row else None


async def _update_user_mode(user_id: int, mode: str) -> None:
    """–û–±–Ω–æ–≤–ª—è–µ—Ç —Ä–µ–∂–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    async with aiosqlite.connect(DB_PATH) as db:
        await db.execute(
            "UPDATE users SET mode = ? WHERE user_id = ?",
            (mode, user_id),
        )
        await db.commit()


async def select_mode_local(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –Ω–∞ Telegram-–≤–µ—Ä—Å–∏—é."""
    query = update.callback_query
    await query.answer()

    keyboard = [
        [
            InlineKeyboardButton("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data="confirm_switch_local"),
            InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_switch"),
        ]
    ]
    await query.message.edit_text(
        (
            "üì± <b>–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ Telegram-–≤–µ—Ä—Å–∏—é?</b>\n"
            "‚Ä¢ –î–∞–Ω–Ω—ã–µ (–∏–º—è, –≤–æ–∑—Ä–∞—Å—Ç, –≤–µ—Å) —Ö—Ä–∞–Ω—è—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤ –±–æ—Ç–µ.\n"
            "‚Ä¢ –ò—Å—Ç–æ—Ä–∏—è –≤–∑–≤–µ—à–∏–≤–∞–Ω–∏–π –∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –≤–µ–¥—É—Ç—Å—è –≤—Ä—É—á–Ω—É—é.\n"
            "‚Ä¢ –ú–æ–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ Gym-Stat –ø–æ–∑–∂–µ —á–µ—Ä–µ–∑ ¬´üîÑ –°–º–µ–Ω–∏—Ç—å —Ä–µ–∂–∏–º¬ª."
        ),
        parse_mode="HTML",
        reply_markup=InlineKeyboardMarkup(keyboard),
    )


async def _api_available() -> bool:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API Gym-Stat."""
    try:
        async with httpx.AsyncClient(timeout=5) as client:
            resp = await client.get(GYMSTAT_API_URL)
    except Exception as e:
        logger.exception("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ API: %s", e)
        return False
    if resp.status_code >= 500:
        logger.warning(
            "–ü—Ä–æ–≤–µ—Ä–∫–∞ API Gym-Stat –≤–µ—Ä–Ω—É–ª–∞ %s: %s", resp.status_code, resp.text
        )
        return False
    return True


async def select_mode_api(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –Ω–∞ —Ä–µ–∂–∏–º API."""
    query = update.callback_query
    await query.answer()

    user_id = query.from_user.id
    keyboard = [
        [
            InlineKeyboardButton("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data="confirm_switch_api"),
            InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_switch"),
        ]
    ]
    await query.message.edit_text(
        (
            "üåê <b>–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å Gym-Stat.ru?</b>\n"
            "‚Ä¢ –ü–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –∏–ª–∏ –≤–æ–π—Ç–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç.\n"
            "‚Ä¢ –ü—Ä–æ—Ñ–∏–ª—å –∏ –≤–µ—Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É—é—Ç—Å—è —Å —Å–∞–π—Ç–æ–º.\n"
            "‚Ä¢ –ü—Ä–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–∞ –º–æ–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ª–æ–∫–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º."
        ),
        parse_mode="HTML",
        reply_markup=InlineKeyboardMarkup(keyboard),
    )


async def show_help(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help."""
    query = update.callback_query
    await query.answer()
    text = (
        "üì± <b>Telegram-–≤–µ—Ä—Å–∏—è</b> ‚Äî —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –ª–æ–∫–∞–ª—å–Ω–æ, –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è"
        " –±—ã—Å—Ç—Ä—ã—Ö –∑–∞–º–µ—Ç–æ–∫ –±–µ–∑ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.\n"
        "üåê <b>Gym-Stat</b> ‚Äî —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å —Å–∞–π—Ç–æ–º, –¥–æ—Å—Ç—É–ø –∫ –≤–µ–±-–∫–∞–±–∏–Ω–µ—Ç—É –∏"
        " –∏—Å—Ç–æ—Ä–∏–∏ –≤–µ—Å–∞. –ü–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –ª–æ–≥–∏–Ω/–ø–∞—Ä–æ–ª—å.\n\n"
        "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å —Ä–µ–∂–∏–º, –∏–ª–∏ /settings –¥–ª—è —Å–º–µ–Ω—ã"
        " –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç."
    )
    await query.message.edit_text(text, parse_mode="HTML", reply_markup=get_mode_selection_keyboard())


async def switch_mode_prompt(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–í—ã–≤–æ–¥–∏—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤—ã–±–æ—Ä–∞ —Ä–µ–∂–∏–º–∞."""
    if update.callback_query:
        query = update.callback_query
        await query.answer()
        await query.message.edit_text(
            (
                "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã:\n"
                "‚Ä¢ –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –≤–µ—Å—Ç–∏ –∑–∞–º–µ—Ç–∫–∏ –ª–æ–∫–∞–ª—å–Ω–æ ‚Äî –≤—ã–±–µ—Ä–∏—Ç–µ Telegram-–≤–µ—Ä—Å–∏—é.\n"
                "‚Ä¢ –î–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å —Å–∞–π—Ç–æ–º –∏ –∏—Å—Ç–æ—Ä–∏–∏ –≤–µ—Å–∞ ‚Äî —Ä–µ–∂–∏–º Gym-Stat."
            ),
            reply_markup=get_mode_selection_keyboard()
        )
    else:
        await update.message.reply_text(
            (
                "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã:\n"
                "‚Ä¢ Telegram-–≤–µ—Ä—Å–∏—è ‚Äî –¥–∞–Ω–Ω—ã–µ —Ç–æ–ª—å–∫–æ –≤ —ç—Ç–æ–º —á–∞—Ç–µ.\n"
                "‚Ä¢ Gym-Stat ‚Äî –Ω—É–∂–Ω—ã –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏."
            ),
            reply_markup=get_mode_selection_keyboard()
        )

async def confirm_switch_mode(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç —Ä–µ–∂–∏–º –ø–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è."""
    query = update.callback_query
    await query.answer()
    user_id = query.from_user.id
    target_mode = query.data.replace("confirm_switch_", "")

    if target_mode == "api":
        if not await _api_available():
            logger.warning(
                "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å %s: API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ, –æ—Å—Ç–∞—ë–º—Å—è –≤ –ª–æ–∫–∞–ª—å–Ω–æ–º —Ä–µ–∂–∏–º–µ", user_id
            )
            await _update_user_mode(user_id, "local")
            await query.message.edit_text(
                (
                    "‚ö†Ô∏è –°–∞–π—Ç Gym-Stat.ru —Å–µ–π—á–∞—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω."
                    " –í—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ —Ä–∞–±–æ—Ç—É –≤ Telegram-–≤–µ—Ä—Å–∏–∏ ‚Äî –≤—Å–µ —Ç–µ–∫—É—â–∏–µ"
                    " –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –ª–æ–∫–∞–ª—å–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è"
                    " –ø–æ–∑–∂–µ —á–µ—Ä–µ–∑ ¬´üîÑ –°–º–µ–Ω–∏—Ç—å —Ä–µ–∂–∏–º¬ª."
                ),
                parse_mode="HTML",
                reply_markup=get_main_menu(mode="local"),
            )
            return
        await _update_user_mode(user_id, "api")
        token = await get_valid_access_token(user_id)
        if token:
            await query.message.edit_text(
                (
                    "–†–µ–∂–∏–º –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å Gym-Stat.ru.\n"
                    "–¢–µ–∫—É—â–∞—è —Å–µ—Å—Å–∏—è Gym-Stat –µ—â—ë –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ ‚Äî –º–æ–∂–Ω–æ"
                    " –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å —Ä–∞–±–æ—Ç—É —á–µ—Ä–µ–∑ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é."
                ),
                reply_markup=get_main_menu(mode="api"),
            )
        else:
            await query.message.edit_text(
                (
                    "–†–µ–∂–∏–º –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å Gym-Stat.ru.\n"
                    "–°–Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –≤—Ö–æ–¥ –∏–ª–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é, —á—Ç–æ–±—ã –∑–∞–≥—Ä—É–∑–∏—Ç—å"
                    " –ø—Ä–æ—Ñ–∏–ª—å –∏ –∏—Å—Ç–æ—Ä–∏—é –≤–µ—Å–∞."
                ),
                reply_markup=get_api_auth_keyboard(),
            )
    else:
        await _update_user_mode(user_id, "local")
        await query.message.edit_text(
            (
                "–†–µ–∂–∏–º –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ Telegram-–≤–µ—Ä—Å–∏—é.\n"
                "–ú–æ–∂–Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å –≤–µ—Å—Ç–∏ –∑–∞–º–µ—Ç–∫–∏ –ª–æ–∫–∞–ª—å–Ω–æ –∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏"
                " —Å–Ω–æ–≤–∞ –ø–æ–¥–∫–ª—é—á–∏—Ç—å Gym-Stat —á–µ—Ä–µ–∑ ¬´üîÑ –°–º–µ–Ω–∏—Ç—å —Ä–µ–∂–∏–º¬ª."
            ),
            reply_markup=get_main_menu(mode="local")
        )


async def cancel_switch(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –≤—ã–±–æ—Ä—É —Ä–µ–∂–∏–º–∞."""
    query = update.callback_query
    await query.answer()
    await query.message.edit_text(
        (
            "–í—ã–±–æ—Ä —Ä–µ–∂–∏–º–∞ –æ—Ç–º–µ–Ω—ë–Ω.\n"
            "–ú–æ–∂–µ—Ç–µ –æ—Å—Ç–∞—Ç—å—Å—è –≤ —Ç–µ–∫—É—â–µ–º —Ä–µ–∂–∏–º–µ –∏–ª–∏ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π –ø–æ–∑–∂–µ —á–µ—Ä–µ–∑"
            " ¬´üîÑ –°–º–µ–Ω–∏—Ç—å —Ä–µ–∂–∏–º¬ª."
        ),
        reply_markup=get_mode_selection_keyboard(),
    )