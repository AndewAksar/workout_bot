# bot/handlers/start_command.py
"""
–ú–æ–¥—É–ª—å: start_command.py
–û–ø–∏—Å–∞–Ω–∏–µ: –ú–æ–¥—É–ª—å —Å–æ–¥–µ—Ä–∂–∏—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start.

–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:
- sqlite3: –î–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö SQLite.
- telegram: –î–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å Telegram API.
- telegram.ext: –î–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏ Telegram.
- bot.config.settings: –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö (WELCOME_MESSAGE).
- bot.keyboards.main_menu: –î–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é.
- bot.utils.message_deletion: –î–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π.
"""

import sqlite3
import os

from telegram import Update
from telegram.ext import ContextTypes

from bot.config.settings import WELCOME_MESSAGE, DB_PATH
from bot.keyboards.main_menu import get_main_menu
from bot.utils.logger import setup_logging
from bot.keyboards.mode_selection import get_mode_selection_keyboard
from bot.utils.message_deletion import schedule_message_deletion


logger = setup_logging()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start."""
    # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –æ–±—ä–µ–∫—Ç–∞ Update
    user = update.message.from_user
    user_id = user.id
    username = user.username if user.username else "–¥—Ä—É–≥"
    first_name = user.first_name if user.first_name else ""

    try:
        logger.info(f"–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {DB_PATH}, —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {os.path.exists(DB_PATH)}")
        conn = sqlite3.connect(DB_PATH)
        c = conn.cursor()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–∞–±–ª–∏—Ü
        c.execute("SELECT name FROM sqlite_master WHERE type='table' AND name='users'")
        if not c.fetchone():
            from bot.database.db_init import init_db
            init_db()

        c.execute("SELECT name FROM sqlite_master WHERE type='table' AND name='UserSettings'")

        if not c.fetchone():
            from bot.database.db_init import init_db
            init_db()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        c.execute("SELECT mode FROM users WHERE user_id = ?", (user_id,))
        user_record = c.fetchone()

        if not user_record:
            c.execute(
            "INSERT INTO users (user_id, telegram_username, mode) VALUES (?, ?, 'local')",
            (user_id, username),
            )

        c.execute(
            "INSERT OR IGNORE INTO UserSettings (user_id, username, name) VALUES (?, ?, ?)",
            (user_id, username, first_name),
        )

        c.execute(
            "UPDATE UserSettings SET username = ?, name = COALESCE(name, ?) WHERE user_id = ?",
            (username, first_name, user_id),
        )

        c.execute(
            "UPDATE users SET telegram_username = ? WHERE user_id = ?",
            (username, user_id),
        )
        conn.commit()

        if not user_record:
            await update.message.reply_text(
                "üí™ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç –¥–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫!\n–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã:",
                reply_markup=get_mode_selection_keyboard()
            )
            await schedule_message_deletion(
                context,
                [update.message.message_id],
                chat_id=update.message.chat_id,
                delay=5)
            return

        c.execute("SELECT name, age, weight, height, gender FROM UserSettings WHERE user_id = ?", (user_id,))
        profile = c.fetchone()

        # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        greeting = (
            f"<b>–ü—Ä–∏–≤–µ—Ç, {profile[0] or username}! üëã</b>\n"
            f"–¢–≤–æ–π ID: <code>{user_id}</code>\n"
        )
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª—è
        if profile and any(profile[1:]):
            greeting += (
                f"\nüìã <b>–¢–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å:</b>\n"
                f"–í–æ–∑—Ä–∞—Å—Ç: {profile[1] if profile[1] else '–ù–µ —É–∫–∞–∑–∞–Ω'}\n"
                f"–í–µ—Å: {profile[2] if profile[2] else '–ù–µ —É–∫–∞–∑–∞–Ω'} –∫–≥\n"
                f"–†–æ—Å—Ç: {profile[3] if profile[3] else '–ù–µ —É–∫–∞–∑–∞–Ω'} —Å–º\n"
                f"–ü–æ–ª: {profile[4] if profile[4] else '–ù–µ —É–∫–∞–∑–∞–Ω'}\n"
            )
        greeting += f"{WELCOME_MESSAGE}"

        # –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –≥–ª–∞–≤–Ω—ã–º –º–µ–Ω—é
        await update.message.reply_text(
            greeting,
            parse_mode="HTML",
            reply_markup=get_main_menu()
        )

        # –ü–ª–∞–Ω–∏—Ä—É–µ–º —É–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–æ–º–∞–Ω–¥–æ–π /start
        await schedule_message_deletion(
            context,
            [update.message.message_id],
            chat_id=update.message.chat_id,
            delay=5
        )

    except sqlite3.Error as e:
        logger.error(f"–û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")
        sent_message = await update.message.reply_text(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
            reply_markup=get_main_menu()
        )

        # –ü–ª–∞–Ω–∏—Ä—É–µ–º —É–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–æ–º–∞–Ω–¥–æ–π /start –¥–∞–∂–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ
        await schedule_message_deletion(
            context,
            [update.message.message_id],
            chat_id=update.message.chat_id,
            delay=5
        )

    except Exception as e:
        logger.error(f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")
        sent_message = await update.message.reply_text(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –ø–æ–∑–∂–µ.",
            reply_markup=get_main_menu()
        )
        # –ü–ª–∞–Ω–∏—Ä—É–µ–º —É–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–æ–º–∞–Ω–¥–æ–π /start –¥–∞–∂–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ
        await schedule_message_deletion(
            context,
            [update.message.message_id],
            chat_id=update.message.chat_id,
            delay=5
        )

    finally:
        if 'conn' in locals():
            conn.close()
            logger.info(f"–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫—Ä—ã—Ç–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")

